/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  WeatherWagerMock,
  WeatherWagerMockInterface,
} from "../../contracts/WeatherWagerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cityId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockTimestamp",
        type: "uint256",
      },
    ],
    name: "CityMarketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cityId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "winningCondition",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "payoutRatio",
        type: "uint64",
      },
    ],
    name: "CitySettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payoutWei",
        type: "uint256",
      },
    ],
    name: "ForecastPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cityId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "ForecastPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MARKET_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_CONDITIONS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ORACLE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cityTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitmentUsed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cityId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "conditionCount",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lockTimestamp",
        type: "uint256",
      },
    ],
    name: "createCityMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cityId",
        type: "uint256",
      },
    ],
    name: "getCityMarket",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "conditionCount",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lockTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "settled",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "winningCondition",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "payoutRatio",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "totalDepositedWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPaidWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gatewayRequestId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "winningTotalScaled",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "getTicket",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "cityId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bettor",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "condition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "commitment",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
        ],
        internalType: "struct WeatherWagerMock.ForecastTicket",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cityId",
        type: "uint256",
      },
    ],
    name: "getTicketsForCity",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "conditionCount",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lockTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "settled",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "winningCondition",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "payoutRatio",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "totalPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDepositedWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPaidWei",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cityId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "placeForecast",
    outputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "requestClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cityId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "winningCondition",
        type: "uint8",
      },
    ],
    name: "settleCity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "uint256",
        name: "cityId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bettor",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "condition",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200008857601f620014b138819003918201601f19168301916001600160401b038311848410176200008d578084926020946040528339810103126200008857516001600160a01b0381168103620000885780620000646200007792620000a3565b50620000708162000123565b50620001c5565b5060405161122e9081620002638239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff166200011f57818052816020526040822081835260205260408220600160ff198254161790553391600080516020620014918339815191528180a4600190565b5090565b6001600160a01b031660008181527f9a5c44b320440ad787f4682b3f3060a6000d227ef6e02d0269bcba08b6f8fb5a60205260408120549091907f395f08be531c0d7403cba7c5ffd2b57329184452bcebcd6a48299ebbbf39db6f9060ff16620001c057808352826020526040832082845260205260408320600160ff1982541617905560008051602062001491833981519152339380a4600190565b505090565b6001600160a01b031660008181527fa629f6981c2f6895a67dc766e8e03ff72d04a413d0d8773a3ca56e9e474032c160205260408120549091907f68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef19060ff16620001c057808352826020526040832082845260205260408320600160ff1982541617905560008051602062001491833981519152339380a460019056fe60806040908082526004908136101561001757600080fd5b600090813560e01c90816301ffc9a714610ede5750806307e2cea514610ea35780630c70e2e114610d13578063156428ba14610ce65780631a20026814610afe578063248a9ca314610ad35780632f2ff15d14610ab557806336568abe14610a7a5780633e27ec9b14610a3f57806350b44712146109d45780635307a7c51461093f5780636c4ca5cc146106735780637dc379fa146105a457806391d148541461056a578063a0f2ca6714610523578063a217fddf14610508578063b1283e7714610476578063cfbd900f14610457578063d547741f14610422578063d9b7f3ee14610406578063da1f12ab146103e9578063e00b288a146101c55763f1ca9e2e1461012257600080fd5b346101c257602091826003193601126101be5792919235815260038352818120908251808584549182815201908194845286842090845b8181106101aa575050508161016f91038261107c565b83519485948186019282875251809352850193925b82811061019357505050500390f35b835185528695509381019392810192600101610184565b825484529288019260019283019201610159565b5080fd5b80fd5b5082346101be57602092836003193601126103e55780358084526002855282842060018101549290336001600160a01b038516036103b65781810193845460ff811661038157825488526001895286882095600287019160ff83541615610350579160ff9291600184938419161790555460081c169160a01c161460001461031d5760026005910154930161025b84825461109e565b90558480808086335af13d15610318573d67ffffffffffffffff811161030557855190610291601f8201601f19168a018361107c565b815286883d92013e5b156102d0575082519182527ed675edfb712bffc7a3b2e69a57da4af47cdb4e7d48c9dd8f2379d5374eb01a853393a35b51908152f35b835162461bcd60e51b8152908101869052600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b634e487b7160e01b875260418352602487fd5b61029a565b505090508151908382527ed675edfb712bffc7a3b2e69a57da4af47cdb4e7d48c9dd8f2379d5374eb01a853393a36102ca565b885162461bcd60e51b81528087018c9052600b60248201526a139bdd081cd95d1d1b195960aa1b6044820152606490fd5b865162461bcd60e51b81528085018a9052600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606490fd5b845162461bcd60e51b815280830188905260096024820152682737ba1037bbb732b960b91b6044820152606490fd5b8280fd5b5082346101be57816003193601126101be57602090516127128152f35b5091346103e557826003193601126103e5576020925051908152f35b5082346101be5760016104539161044e61043b36610f47565b93909283875286602052862001546110c1565b611183565b5080f35b5082346101be57816003193601126101be576020906005549051908152f35b5091346103e55760203660031901126103e55780610120938335815260016020522080549267ffffffffffffffff600183015460028401549060056003860154948601549501549560ff81519881811615158a5260081c16602089015287015260ff81161515606087015260ff8160081c16608087015260101c1660a085015260c084015260e0830152610100820152f35b5082346101be57816003193601126101be5751908152602090f35b508290346101c257816003193601126101c2576024359235815260036020528181209081548410156101c2575060209261055c91610f9b565b90549060031b1c9051908152f35b5082346101be5760ff8160209361058036610f47565b9082528186528282206001600160a01b039091168252855220549151911615158152f35b509190346103e55760203660031901126103e557818360c09460a083516105ca8161104a565b82815282602082015282858201528260608201528260808201520152823581526002602052208251916105fc8361104a565b81549384845260ff600184015460018060a01b03602087018183168152838589019360a01c16835260a08460028901549760608b0198895260038a01549960808c019a8b520154169801971515885284519889525116602088015251169085015251606084015251608083015251151560a0820152f35b50919060a03660031901126103e557803590602493843567ffffffffffffffff908181116103e5576106a89036908501610f6d565b50506044358181116103e5576106c19036908501610f6d565b50506064359081116101be576106da9036908401610f6d565b505060843593838252600192602095848752828420906106fd60ff835416610fc9565b8582015442101561090d5761071960ff6002840154161561100d565b80855282885260ff84862054166108d957341561089e578085528288528385209560ff19968188825416179055600554966000199283891461088c579060ff868b8a948c8f8882016005558c51936107708561104a565b8452808401903382528d89600282880193828552606089019634885260808a0198895260a08a019d8e5283525220945185558985019160018060a01b039051168254918860a01b905160a01b16916affffffffffffffffffffff60a81b16171790555160028301555160038201550192511515918354169116179055878652600389528486209081549a680100000000000000008c101561087b57509961081e9188999a9b82018155610f9b565b819291549060031b9188831b921b19161790556003810161084034825461109e565b90550161084e34825461109e565b905551937f912d579a53814975f697b2c4218d9e2384cd2cf768df5548175f0184ae876cc5339280a48152f35b634e487b7160e01b88526041865287fd5b634e487b7160e01b8852601186528b88fd5b835162461bcd60e51b81528084018990526016818b0152755374616b65206d75737420626520706f73697469766560501b6044820152606490fd5b835162461bcd60e51b8152808401899052600f818b01526e10dbdb5b5a5d1b595b9d081d5cd959608a1b6044820152606490fd5b835162461bcd60e51b8152808401899052600d818b01526c13585c9ad95d081b1bd8dad959609a1b6044820152606490fd5b5091346103e55760203660031901126103e557916101409282358252600160205280822067ffffffffffffffff815494600183015460056002850154928501549401549460ff81519881811615158a5260081c16602089015287015260ff81161515606087015260ff8160081c16608087015260101c1660a085015260c084015260e083015280610100830152610120820152f35b5091346103e55760203660031901126103e5578060c0938335815260026020522080549260018201549260ff8060028501549360038601549501541694825196875260018060a01b038116602088015260a01c169085015260608401526080830152151560a0820152f35b5082346101be57816003193601126101be57602090517f395f08be531c0d7403cba7c5ffd2b57329184452bcebcd6a48299ebbbf39db6f8152f35b5082346101be57610a8a36610f47565b91336001600160a01b03841603610aa657509061045391611183565b5163334bd91960e11b81528490fd5b5082346101be57600161045391610ace61043b36610f47565b611105565b509190346103e55760203660031901126103e557816020936001923581528085522001549051908152f35b509190346103e55760603660031901126103e557803591610b1d610f32565b90604435917f395f08be531c0d7403cba7c5ffd2b57329184452bcebcd6a48299ebbbf39db6f93848752602094878652838820338952865260ff848920541615610cc957508587526001855260ff8388205416610c965760ff8216818115159182610c8b575b505015610c485742841115610c0557508486526001808552828720805461ffff191660089390931b61ff0016929092171781557f59c2fa4b006284598c35248296e37ce5c6d22c8c737e51f3ec7241daad06f89c9392919086906003908460018201556002810169ffffffffffffffff00ff198154169055015551908152a280f35b825162461bcd60e51b8152908101859052601860248201527f4c6f636b2074696d65206d7573742062652066757475726500000000000000006044820152606490fd5b825162461bcd60e51b8152908101859052601760248201527f496e76616c696420636f6e646974696f6e20636f756e740000000000000000006044820152606490fd5b111590508138610b83565b825162461bcd60e51b8152908101859052600d60248201526c4d61726b65742065786973747360981b6044820152606490fd5b6044925083519163e2517d3f60e01b835233908301526024820152fd5b509190346103e55760203660031901126103e557816020938260ff93358252855220541690519015158152f35b5082346101be57806003193601126101be57823590610d30610f32565b937f68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef194858552602095858752838620338752875260ff848720541615610e86575083855260018652828520610d8860ff825416610fc9565b60018101544210610e4f57600201908154610da660ff82161561100d565b60ff82169380851015610e18575061ffff191660089190911b61ff0016176001178155939492937f31e56f30f271599ce0531e5bddbb7eed43e9b9f824cc36b56608ab23cf5cefdd93620f424091805469ffffffffffffffff00001916640f424000001790558351928352820152a280f35b855162461bcd60e51b8152908101899052601160248201527024b73b30b634b21031b7b73234ba34b7b760791b6044820152606490fd5b835162461bcd60e51b8152808401889052601160248201527013585c9ad95d081b9bdd081b1bd8dad959607a1b6044820152606490fd5b9050604492519163e2517d3f60e01b835233908301526024820152fd5b5082346101be57816003193601126101be57602090517f68e79a7bf1e0bc45d0a330c573bc367f9cf464fd326078812f301165fbda4ef18152f35b905082346103e55760203660031901126103e5573563ffffffff60e01b81168091036103e55760209250637965db0b60e01b8114908115610f21575b5015158152f35b6301ffc9a760e01b14905083610f1a565b6024359060ff82168203610f4257565b600080fd5b6040906003190112610f4257600435906024356001600160a01b0381168103610f425790565b9181601f84011215610f425782359167ffffffffffffffff8311610f425760208381860195010111610f4257565b8054821015610fb35760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b15610fd057565b60405162461bcd60e51b815260206004820152601560248201527413585c9ad95d08191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b1561101457565b60405162461bcd60e51b815260206004820152600e60248201526d13585c9ad95d081cd95d1d1b195960921b6044820152606490fd5b60c0810190811067ffffffffffffffff82111761106657604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761106657604052565b919082018092116110ab57565b634e487b7160e01b600052601160045260246000fd5b80600052600060205260406000203360005260205260ff60406000205416156110e75750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b9060009180835282602052604083209160018060a01b03169182845260205260ff6040842054161560001461117e57808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835282602052604083209160018060a01b03169182845260205260ff60408420541660001461117e5780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a460019056fea2646970667358221220b811dfdb741b2cdc27127d0740f66e136161a89ba489761b898cbaffb035d14064736f6c634300081800332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d";

type WeatherWagerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WeatherWagerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WeatherWagerMock__factory extends ContractFactory {
  constructor(...args: WeatherWagerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(admin, overrides || {});
  }
  override deploy(
    admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(admin, overrides || {}) as Promise<
      WeatherWagerMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WeatherWagerMock__factory {
    return super.connect(runner) as WeatherWagerMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WeatherWagerMockInterface {
    return new Interface(_abi) as WeatherWagerMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WeatherWagerMock {
    return new Contract(address, _abi, runner) as unknown as WeatherWagerMock;
  }
}
